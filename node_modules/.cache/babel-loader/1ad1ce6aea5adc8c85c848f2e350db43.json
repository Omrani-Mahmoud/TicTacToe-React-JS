{"ast":null,"code":"import _slicedToArray from \"D:\\\\My Stuff\\\\My Web Stuff\\\\React\\\\tic_tac_toe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\My Stuff\\\\My Web Stuff\\\\React\\\\tic_tac_toe\\\\src\\\\Components\\\\Board.js\";\nimport React from \"react\";\nimport Square from \"./Square\";\nimport Fab from '@material-ui/core/Fab';\nconst results = Array(9).fill(null);\n\nfunction Board() {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        squares = _React$useState2[0],\n        setSquares = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        XisNext = _React$useState4[0],\n        setXisNext = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        reset = _React$useState6[0],\n        setReset = _React$useState6[1];\n\n  let wwinner;\n\n  const newGame = () => {\n    setSquares(Array(9).fill(null));\n    setXisNext(true);\n  };\n\n  const put = i => {\n    results[i] = XisNext ? \"X\" : \"O\";\n  };\n\n  React.useEffect(() => {\n    newGame();\n  }, [reset]);\n\n  const resetGame = () => {\n    setReset(!reset);\n    setSquares([]);\n    wwinner = \"\";\n  };\n\n  const Player = () => {\n    setXisNext(!XisNext);\n  };\n\n  const calculateWinner = () => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n      if (results[a] && results[a] === results[b] && results[a] === results[c]) {\n        return \"The Player \".concat(results[a], \" won !! \");\n      }\n    }\n\n    return null;\n  };\n\n  wwinner = calculateWinner();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Welcome To TIC-TAC-TOE\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, wwinner ? wwinner : \"\"), React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: () => resetGame(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, squares.map((x, i) => React.createElement(Square, {\n    index: i,\n    currentPlayer: XisNext ? \"X\" : \"O\",\n    changePlayer: Player,\n    put: put,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n}\n\nexport default Board;","map":{"version":3,"sources":["D:\\My Stuff\\My Web Stuff\\React\\tic_tac_toe\\src\\Components\\Board.js"],"names":["React","Square","Fab","results","Array","fill","Board","useState","squares","setSquares","XisNext","setXisNext","reset","setReset","wwinner","newGame","put","i","useEffect","resetGame","Player","calculateWinner","lines","length","a","b","c","map","x"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nconst results=Array(9).fill(null);\r\nfunction Board(){\r\n    const [squares,setSquares]=React.useState([]);\r\n    const [XisNext,setXisNext]=React.useState(false);\r\n    const [reset,setReset]=React.useState(false);\r\n    let wwinner;\r\n    const newGame=()=>{\r\n        setSquares(Array(9).fill(null));\r\n        setXisNext(true);\r\n    }\r\n\r\n    const put=(i)=>{\r\n        results[i]=XisNext?\"X\":\"O\";\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        newGame();\r\n    },[reset]);\r\n\r\n    const resetGame=()=>{\r\n        setReset(!reset);\r\n        setSquares([]);\r\n        wwinner=\"\"\r\n    }\r\n\r\n    const Player=()=>{\r\n       setXisNext(!XisNext);\r\n    }\r\n\r\n    const calculateWinner=()=>{\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6]\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (\r\n            results[a] &&\r\n            results[a] === results[b] &&\r\n            results[a] === results[c]\r\n          ) {\r\n            return `The Player ${results[a]} won !! `;\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n\r\n      wwinner=calculateWinner();\r\n      \r\n    \r\n    return(\r\n        <div>\r\n          <h1>Welcome To TIC-TAC-TOE</h1>\r\n            <h3>{wwinner?wwinner:\"\"}</h3>\r\n            <Fab color=\"primary\" aria-label=\"add\" onClick={()=>resetGame()}>+\r\n            </Fab>\r\n            <br/>\r\n            <br/>\r\n            <main>\r\n                {squares.map((x,i)=>\r\n                   <Square index={i} currentPlayer={XisNext?\"X\":\"O\"} changePlayer={Player} put={put}/>\r\n                )}\r\n            </main>\r\n        </div>\r\n    )}\r\n  \r\nexport default Board;"]},"metadata":{},"sourceType":"module"}